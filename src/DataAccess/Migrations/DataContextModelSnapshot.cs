// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("DAL.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<int>("WebCheckId");

                    b.HasKey("Id");

                    b.HasIndex("WebCheckId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("DAL.Models.RequestHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<int>("WebCheckId");

                    b.HasKey("Id");

                    b.HasIndex("WebCheckId");

                    b.ToTable("RequestHeaders");
                });

            modelBuilder.Entity("DAL.Models.ResponseTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Script")
                        .IsRequired();

                    b.Property<int>("WebCheckId");

                    b.HasKey("Id");

                    b.HasIndex("WebCheckId");

                    b.ToTable("ResponseTests");
                });

            modelBuilder.Entity("DAL.Models.WebCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Method");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("WebChecks");
                });

            modelBuilder.Entity("DAL.Models.Label", b =>
                {
                    b.HasOne("DAL.Models.WebCheck", "WebCheck")
                        .WithMany("Labels")
                        .HasForeignKey("WebCheckId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.RequestHeader", b =>
                {
                    b.HasOne("DAL.Models.WebCheck", "WebCheck")
                        .WithMany("RequestHeaders")
                        .HasForeignKey("WebCheckId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.ResponseTest", b =>
                {
                    b.HasOne("DAL.Models.WebCheck", "WebCheck")
                        .WithMany("ResponseTests")
                        .HasForeignKey("WebCheckId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
